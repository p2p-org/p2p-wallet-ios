
/// %@ Account Creation
internal static func accountCreation(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ Account Creation", String(describing: p1))
}
/// %@ Closed
internal static func closed(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ Closed", String(describing: p1))
}
/// %@ Created
internal static func created(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ Created", String(describing: p1))
}
/// %@ found
internal static func found(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ found", String(describing: p1))
}
/// %@ is available
internal static func isAvailable(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ is available", String(describing: p1))
}
/// %@ is successfully sent
internal static func isSuccessfullySent(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ is successfully sent", String(describing: p1))
}
/// %@ is successfully swapped to %@
internal static func isSuccessfullySwappedTo(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "%@ is successfully swapped to %@", String(describing: p1), String(describing: p2))
}
/// **%@** is the remaining time to safely send the assets.
internal static func isTheRemainingTimeToSafelySendTheAssets(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ is the remaining time to safely send the assets.", String(describing: p1))
}
/// %@ isn’t available
internal static func isnTAvailable(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ isn’t available", String(describing: p1))
}
/// %@ mint address
internal static func mintAddress(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ mint address", String(describing: p1))
}
/// %@ Network
internal static func network(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ Network", String(describing: p1))
}
/// %@ signature
internal static func signature(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ signature", String(describing: p1))
}
/// %@ successfully sent
internal static func successfullySent(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ successfully sent", String(describing: p1))
}
/// %@ was sent successfully
internal static func wasSentSuccessfully(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@ was sent successfully", String(describing: p1))
}
/// %@ → %@ swapped successfully
internal static func swappedSuccessfully(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "%@ → %@ swapped successfully", String(describing: p1), String(describing: p2))
}
/// %@-compatible address
internal static func compatibleAddress(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@-compatible address", String(describing: p1))
}
/// %@h ago
internal static func hAgo(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@h ago", String(describing: p1))
}
/// %@m ago
internal static func mAgo(_ p1: Any) -> String {
  return L10n.tr("Localizable", "%@m ago", String(describing: p1))
}
/// Plural format key: "%#@variable_0@"
internal static func dDayAgo(_ p1: Int) -> String {
  return L10n.tr("Localizable", "%d day ago", p1)
}
/// Plural format key: "%#@variable_0@"
internal static func dHiddenWallet(_ p1: Int) -> String {
  return L10n.tr("Localizable", "%d hidden wallet", p1)
}
/// 1 %@ Price
internal static func _1Price(_ p1: Any) -> String {
  return L10n.tr("Localizable", "1 %@ Price", String(describing: p1))
}
/// 1d
internal static var _1d: String { L10n.tr("Localizable", "1d") }
/// 1h
internal static var _1h: String { L10n.tr("Localizable", "1h") }
/// 1m
internal static var _1m: String { L10n.tr("Localizable", "1m") }
/// 1w
internal static var _1w: String { L10n.tr("Localizable", "1w") }
/// 24 hours
internal static var _24Hours: String { L10n.tr("Localizable", "24 hours") }
/// 4h
internal static var _4h: String { L10n.tr("Localizable", "4h") }
/// A **%@** to receive bitcoins over the Bitcoin network
internal static func aToReceiveBitcoinsOverTheBitcoinNetwork(_ p1: Any) -> String {
  return L10n.tr("Localizable", "A **%@** to receive bitcoins over the Bitcoin network", String(describing: p1))
}
/// A proportional amount of rewards will be withdrawn
internal static var aProportionalAmountOfRewardsWillBeWithdrawn: String { L10n.tr("Localizable", "A proportional amount of rewards will be withdrawn") }
/// A slippage is the difference between the expected price and the actual price at which a trade is executed
internal static var aSlippageIsTheDifferenceBetweenTheExpectedPriceAndTheActualPriceAtWhichATradeIsExecuted: String { L10n.tr("Localizable", "A slippage is the difference between the expected price and the actual price at which a trade is executed") }
/// Accept
internal static var accept: String { L10n.tr("Localizable", "Accept") }
/// Activities
internal static var activities: String { L10n.tr("Localizable", "Activities") }
/// Activity
internal static var activity: String { L10n.tr("Localizable", "Activity") }
/// actual
internal static var actual: String { L10n.tr("Localizable", "actual") }
internal static var addMore: String { L10n.tr("Localizable", "Add more") }
/// Add token
internal static var addToken: String { L10n.tr("Localizable", "Add token") }
/// Add token to see wallet address
internal static var addTokenToSeeWalletAddress: String { L10n.tr("Localizable", "Add token to see wallet address") }
/// Add wallet
internal static var addWallet: String { L10n.tr("Localizable", "Add wallet") }
/// Adding token to your wallet
internal static var addingTokenToYourWallet: String { L10n.tr("Localizable", "Adding token to your wallet") }
/// Address
internal static var address: String { L10n.tr("Localizable", "Address") }
/// Address copied to clipboard!
internal static var addressCopiedToClipboard: String { L10n.tr("Localizable", "Address copied to clipboard!") }
/// Address copied!
internal static var addressCopied: String { L10n.tr("Localizable", "Address copied!") }
/// Address was copied to clipboard
internal static var addressWasCopiedToClipboard: String { L10n.tr("Localizable", "Address was copied to clipboard") }
/// After 2 more incorrect PINs we’ll log out current account for your safety
internal static var after2MoreIncorrectPINsWeLlLogOutCurrentAccountForYourSafety: String { L10n.tr("Localizable", "After 2 more incorrect PINs we’ll log out current account for your safety") }
/// After first transaction you will\nbe able to view it here
internal static var afterFirstTransactionYouWillBeAbleToViewItHere: String { L10n.tr("Localizable", "After first transaction you will\nbe able to view it here") }
/// All deposits are stored 100%% non-custodiallity with keys held on this device
internal static var allDepositsAreStored100NonCustodiallityWithKeysHeldOnThisDevice: String { L10n.tr("Localizable", "All deposits are stored 100% non-custodiallity with keys held on this device") }
/// All my products
internal static var allMyProducts: String { L10n.tr("Localizable", "All my products") }
/// All my tokens
internal static var allMyTokens: String { L10n.tr("Localizable", "All my tokens") }
/// All the ways to buy
internal static var allTheWaysToBuy: String { L10n.tr("Localizable", "All the ways to buy") }
/// All tokens
internal static var allTokens: String { L10n.tr("Localizable", "All tokens") }
/// Allow
internal static var allow: String { L10n.tr("Localizable", "Allow") }
/// Allow notifications
internal static var allowNotifications: String { L10n.tr("Localizable", "Allow notifications") }
/// Allow push notifications so you don’t miss any important updates on your account.
internal static var allowPushNotificationsSoYouDonTMissAnyImportantUpdatesOnYourAccount: String { L10n.tr("Localizable", "Allow push notifications so you don’t miss any important updates on your account.") }
/// amount
internal static var amount: String { L10n.tr("Localizable", "amount") }
/// Amount is not valid
internal static var amountIsNotValid: String { L10n.tr("Localizable", "Amount is not valid") }
/// Amount is too small
internal static var amountIsTooSmall: String { L10n.tr("Localizable", "Amount is too small") }
/// Amount is too small, expected %@, got %@
internal static func amountIsTooSmallExpectedGot(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "Amount is too small, expected %@, got %@", String(describing: p1), String(describing: p2))
}
/// An unexpected error occurred
internal static var anUnexpectedErrorOccurred: String { L10n.tr("Localizable", "An unexpected error occurred") }
/// Any token can be received using username regardless of whether it is in your wallet's list
internal static var anyTokenCanBeReceivedUsingUsernameRegardlessOfWhetherItIsInYourWalletSList: String { L10n.tr("Localizable", "Any token can be received using username regardless of whether it is in your wallet's list") }
/// Anytime you want, you can easily reserve a username by going to the settings
internal static var anytimeYouWantYouCanEasilyReserveAUsernameByGoingToTheSettings: String { L10n.tr("Localizable", "Anytime you want, you can easily reserve a username by going to the settings") }
/// App icon
internal static var appIcon: String { L10n.tr("Localizable", "App icon") }
internal static var apy: String { L10n.tr("Localizable", "APY") }
/// Are you sure that this %@ address is valid?
internal static func areYouSureThatThisAddressIsValid(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Are you sure that this %@ address is valid?", String(describing: p1))
}
/// Are you sure you want to delete this token account? This will permanently disable token transfers to this address and remove it from your wallet.
internal static var areYouSureYouWantToDeleteThisTokenAccountThisWillPermanentlyDisableTokenTransfersToThisAddressAndRemoveItFromYourWallet: String { L10n.tr("Localizable", "Are you sure you want to delete this token account? This will permanently disable token transfers to this address and remove it from your wallet.") }
/// As all your funds are insured, you don’t need to worry anymore
internal static var asAllYourFundsAreInsuredYouDonTNeedToWorryAnymore: String { L10n.tr("Localizable", "As all your funds are insured, you don’t need to worry anymore") }
/// Ask a question / Request a feature
internal static var askAQuestionRequestAFeature: String { L10n.tr("Localizable", "Ask a question / Request a feature") }
/// Attempt to debit an account but found no record of a prior credit.
internal static var attemptToDebitAnAccountButFoundNoRecordOfAPriorCredit: String { L10n.tr("Localizable", "Attempt to debit an account but found no record of a prior credit.") }
/// Authentication failed
internal static var authenticationFailed: String { L10n.tr("Localizable", "Authentication failed") }
/// Available
internal static var available: String { L10n.tr("Localizable", "Available") }
/// Back up your wallet
internal static var backUpYourWallet: String { L10n.tr("Localizable", "Back up your wallet") }
/// Backing up
internal static var backingUp: String { L10n.tr("Localizable", "Backing up") }
/// Backup
internal static var backup: String { L10n.tr("Localizable", "Backup") }
/// Backup is ready
internal static var backupIsReady: String { L10n.tr("Localizable", "Backup is ready") }
/// Backup manually
internal static var backupManually: String { L10n.tr("Localizable", "Backup manually") }
/// Backup now
internal static var backupNow: String { L10n.tr("Localizable", "Backup now") }
/// Backup required
internal static var backupRequired: String { L10n.tr("Localizable", "Backup required") }
/// Backup to iCloud
internal static var backupToICloud: String { L10n.tr("Localizable", "Backup to iCloud") }
/// Backup using iCloud
internal static var backupUsingICloud: String { L10n.tr("Localizable", "Backup using iCloud") }
/// Balances
internal static var balances: String { L10n.tr("Localizable", "Balances") }
/// Be sure you can complete this transaction
internal static var beSureYouCanCompleteThisTransaction: String { L10n.tr("Localizable", "Be sure you can complete this transaction") }
/// beta
internal static var beta: String { L10n.tr("Localizable", "beta") }
/// Bitcoin deposit address
internal static var bitcoinDepositAddress: String { L10n.tr("Localizable", "Bitcoin deposit address") }
/// Block number
internal static var blockNumber: String { L10n.tr("Localizable", "Block number") }
/// Blockhash required
internal static var blockhashRequired: String { L10n.tr("Localizable", "Blockhash required") }
/// British pound sterling
internal static var britishPoundSterling: String { L10n.tr("Localizable", "British pound sterling") }
/// but you can send to it multiple times within this session
internal static var butYouCanSendToItMultipleTimesWithinThisSession: String { L10n.tr("Localizable", "but you can send to it multiple times within this session") }
/// Buy %@
internal static func buyOnMoonpay(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Buy %@ on Moonpay", String(describing: p1))
}
/// Buy Cryptos with Credit Card, Fiat or Apple Pay
internal static var buyCryptosWithCreditCardFiatOrApplePay: String { L10n.tr("Localizable", "Buy Cryptos with Credit Card, Fiat or Apple Pay") }
/// Buy it
internal static var buyIt: String { L10n.tr("Localizable", "Buy it") }
/// Buy with credit card
internal static var buyWithCreditCard: String { L10n.tr("Localizable", "Buy with credit card") }
/// Buying %@
internal static func buying(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Buying %@", String(describing: p1))
}
/// By continuing, you agree to wallet's\n%@
internal static func byContinuingYouAgreeToWalletS(_ p1: Any) -> String {
  return L10n.tr("Localizable", "By continuing, you agree to wallet's %@", String(describing: p1))
}
/// By continuing, you agree to wallet's %@ and %@
internal static func byContinuingYouAgreeToWalletSAnd(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "By continuing, you agree to wallet's %@ and %@", String(describing: p1), String(describing: p2))
}
internal static var calculatingFees: String { L10n.tr("Localizable", "Calculating fees") }
/// Calculating minimum transaction amount…
internal static var calculatingMinimumTransactionAmount: String { L10n.tr("Localizable", "Calculating minimum transaction amount…") }
/// cannot exceed 50%%
internal static var cannotExceed50: String { L10n.tr("Localizable", "cannot exceed 50%") }
/// Terms and Conditions
internal static var capitalizedTermsAndConditions: String { L10n.tr("Localizable", "Capitalized Terms and Conditions") }
/// Change
internal static var change: String { L10n.tr("Localizable", "Change") }
/// Change PIN-code
internal static var changePINCode: String { L10n.tr("Localizable", "Change PIN-code") }
/// Change the network?
internal static var changeTheNetwork: String { L10n.tr("Localizable", "Change the network?") }
/// Change the region manually
internal static var changeTheRegionManually: String { L10n.tr("Localizable", "Change the region manually") }
/// Change the token?
internal static var changeTheToken: String { L10n.tr("Localizable", "Change the token?") }
/// Change your search phrase
internal static var changeYourSearchPhrase: String { L10n.tr("Localizable", "Change your search phrase") }
/// Change your settings to use camera for scanning Qr Code
internal static var changeYourSettingsToUseCameraForScanningQrCode: String { L10n.tr("Localizable", "Change your settings to use camera for scanning Qr Code") }
/// Changing currency
internal static var changingCurrency: String { L10n.tr("Localizable", "Changing currency") }
/// Check enterred wallet address and try again.
internal static var checkEnterredWalletAddressAndTryAgain: String { L10n.tr("Localizable", "Check enterred wallet address and try again.") }
/// Checking address' validity
internal static var checkingAddressValidity: String { L10n.tr("Localizable", "Checking address' validity") }
/// Checking name’s availability
internal static var checkingNameSAvailability: String { L10n.tr("Localizable", "Checking name’s availability") }
/// Chinese Yuan
internal static var chineseYuan: String { L10n.tr("Localizable", "Chinese Yuan") }
/// Choose a token for buying
internal static var chooseATokenForBuying: String { L10n.tr("Localizable", "Choose a token for buying") }
/// Choose another destination wallet
internal static var chooseAnotherDestinationWallet: String { L10n.tr("Localizable", "Choose another destination wallet") }
/// Choose another slippage
internal static var chooseAnotherSlippage: String { L10n.tr("Localizable", "Choose another slippage") }
/// Choose available username
internal static var chooseAvailableUsername: String { L10n.tr("Localizable", "Choose available username") }
/// Choose destination wallet
internal static var chooseDestinationWallet: String { L10n.tr("Localizable", "Choose destination wallet") }
/// Choose source wallet
internal static var chooseSourceWallet: String { L10n.tr("Localizable", "Choose source wallet") }
/// Choose the correct words
internal static var chooseTheCorrectWords: String { L10n.tr("Localizable", "Choose the correct words") }
/// Choose the network
internal static var chooseTheNetwork: String { L10n.tr("Localizable", "Choose the network") }
/// Choose the recipient
internal static var chooseTheRecipient: String { L10n.tr("Localizable", "Choose the recipient") }
/// Choose the recipient to proceed
internal static var chooseTheRecipientToProceed: String { L10n.tr("Localizable", "Choose the recipient to proceed") }
/// Choose the token to pay fees
internal static var chooseTheTokenToPayFees: String { L10n.tr("Localizable", "Choose the token to pay fees") }
/// Choose wallet
internal static var chooseWallet: String { L10n.tr("Localizable", "Choose wallet") }
/// Claim %@
internal static func claim(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Claim %@", String(describing: p1))
}
/// classic
internal static var classic: String { L10n.tr("Localizable", "classic") }
/// Close %@ account
internal static func closeAccount(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Close %@ account", String(describing: p1))
}
/// Close token account
internal static var closeTokenAccount: String { L10n.tr("Localizable", "Close token account") }
/// Closed wallet
internal static var closedWallet: String { L10n.tr("Localizable", "Closed wallet") }
/// Receive at least:
internal static var colonReceiveAtLeast: String { L10n.tr("Localizable", "Colon Receive at least") }
/// Combined tokens value
internal static var combinedTokensValue: String { L10n.tr("Localizable", "Combined tokens value") }
/// Coming soon
internal static var comingSoon: String { L10n.tr("Localizable", "Coming soon") }
/// Completed
internal static var completed: String { L10n.tr("Localizable", "Completed") }
/// Confirm it's you
internal static var confirmItSYou: String { L10n.tr("Localizable", "Confirm it's you") }
/// Confirm PIN-code
internal static var confirmPINCode: String { L10n.tr("Localizable", "Confirm PIN-code") }
/// Confirm sending %@
internal static func confirmSending(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Confirm sending %@", String(describing: p1))
}
/// Confirm swapping %@ → %@
internal static func confirmSwapping(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "Confirm swapping %@ → %@", String(describing: p1), String(describing: p2))
}
/// Confirm transactions
internal static var confirmTransactions: String { L10n.tr("Localizable", "Confirm transactions") }
/// Confirm your wallet PIN
internal static var confirmYourWalletPIN: String { L10n.tr("Localizable", "Confirm your wallet PIN") }
/// Confirmed
internal static var confirmed: String { L10n.tr("Localizable", "Confirmed") }
/// Congratulations!
internal static var congratulations: String { L10n.tr("Localizable", "Congratulations!") }
/// Connection rate limits exceeded
internal static var connectionRateLimitsExceeded: String { L10n.tr("Localizable", "Connection rate limits exceeded") }
/// Contact
internal static var contact: String { L10n.tr("Localizable", "Contact") }
/// Convenient and flexible
internal static var convenientAndFlexible: String { L10n.tr("Localizable", "Convenient and flexible") }
/// Copied to the clipboard
internal static var copiedToTheClipboard: String { L10n.tr("Localizable", "Copied to the clipboard") }
/// Copy to clipboard
 internal static var copyToClipboard: String { L10n.tr("Localizable", "Copy to clipboard") }
 /// Could not calculate exchange rate or swapping fees from current token pair
 internal static var couldNotCalculateExchangeRateOrSwappingFeesFromCurrentTokenPair: String { L10n.tr("Localizable", "Could not calculate exchange rate or swapping fees from current token pair") }
 /// Could not calculating fees
 internal static var couldNotCalculatingFees: String { L10n.tr("Localizable", "Could not calculating fees") }
 /// Could not connect to wallet
 internal static var couldNotConnectToWallet: String { L10n.tr("Localizable", "Could not connect to wallet") }
/// Could not create renBTC token, please try again later
internal static var couldNotCreateRenBTCTokenPleaseTryAgainLater: String { L10n.tr("Localizable", "Could not create renBTC token, please try again later") }
/// Could not derivate private key
internal static var couldNotDerivatePrivateKey: String { L10n.tr("Localizable", "Could not derivate private key") }
/// Could not retrieve account info
internal static var couldNotRetrieveAccountInfo: String { L10n.tr("Localizable", "Could not retrieve account info") }
/// Could not retrieve balance
internal static var couldNotRetrieveBalance: String { L10n.tr("Localizable", "Could not retrieve balance") }
/// Could not retrieve exchange rate
internal static var couldNotRetrieveExchangeRate: String { L10n.tr("Localizable", "Could not retrieve exchange rate") }
/// Create a PIN-code to protect your wallet
internal static var createAPINCodeToProtectYourWallet: String { L10n.tr("Localizable", "Create a PIN-code to protect your wallet") }
/// Create address
internal static var createAddress: String { L10n.tr("Localizable", "Create address") }
/// Create Bitcoin address
internal static var createBitcoinAddress: String { L10n.tr("Localizable", "Create Bitcoin address") }
/// create new wallet
internal static var createNewWallet: String { L10n.tr("Localizable", "create new wallet") }
/// Create Token Account
internal static var createTokenAccount: String { L10n.tr("Localizable", "Create Token Account") }
/// Creating
internal static var creating: String { L10n.tr("Localizable", "Creating") }
/// creating an account
internal static var creatingAnAccount: String { L10n.tr("Localizable", "creating an account") }
/// Creating Token Account
internal static var creatingTokenAccount: String { L10n.tr("Localizable", "Creating Token Account") }
/// Creating your link
internal static var creatingYourLink: String { L10n.tr("Localizable", "Creating your link") }
/// Currency changed
internal static var currencyChanged: String { L10n.tr("Localizable", "Currency changed") }
/// Current PIN-code
internal static var currentPINCode: String { L10n.tr("Localizable", "Current PIN-code") }
/// Current price
internal static var currentPrice: String { L10n.tr("Localizable", "Current price") }
/// Custom slippage
internal static var customSlippage: String { L10n.tr("Localizable", "Custom slippage") }
/// DApps
internal static var dApps: String { L10n.tr("Localizable", "DApps") }
/// Dark
internal static var dark: String { L10n.tr("Localizable", "Dark") }
/// Date
internal static var date: String { L10n.tr("Localizable", "Date") }
/// day
internal static var day: String { L10n.tr("Localizable", "day") }
/// Decimals mismatch
internal static var decimalsMismatch: String { L10n.tr("Localizable", "Decimals mismatch") }
/// Decline
internal static var decline: String { L10n.tr("Localizable", "Decline") }
/// Default secure check
internal static var defaultSecureCheck: String { L10n.tr("Localizable", "Default secure check") }
/// Deposit
internal static var deposit: String { L10n.tr("Localizable", "Deposit") }
/// Deposit (will be returned)
internal static var depositWillBeReturned: String { L10n.tr("Localizable", "Deposit (will be returned)") }
/// Deposit confirmed
internal static var depositConfirmed: String { L10n.tr("Localizable", "Deposit confirmed") }
/// Deposit fees
internal static var depositFees: String { L10n.tr("Localizable", "Deposit fees") }
/// Deposit into Solend
internal static var depositIntoSolend: String { L10n.tr("Localizable", "Deposit into Solend") }
/// Deposit MAX Amount
internal static var depositMAXAmount: String { L10n.tr("Localizable", "Deposit MAX Amount") }
/// Deposit to earn a yield
internal static var depositToEarnAYield: String { L10n.tr("Localizable", "Deposit to earn a yield") }
/// Deposit your crypto
internal static var depositYourCrypto: String { L10n.tr("Localizable", "Deposit your crypto") }
/// Deposit your tokens and earn
internal static var depositYourTokensAndEarn: String { L10n.tr("Localizable", "Deposit your tokens and earn") }
/// Depositing funds failed
internal static var depositingFundsFailed: String { L10n.tr("Localizable", "Depositing funds failed") }
/// Destination network
internal static var destinationNetwork: String { L10n.tr("Localizable", "Destination network") }
/// Didn't get it?
internal static var didnTGetIt: String { L10n.tr("Localizable", "Didn't get it?") }
/// Direct %@ address
internal static func directAddress(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Direct %@ address", String(describing: p1))
}
/// Discard
internal static var discard: String { L10n.tr("Localizable", "Discard") }
/// Do this later
internal static var doThisLater: String { L10n.tr("Localizable", "Do this later") }
/// Do you really want to logout?
internal static var doYouReallyWantToLogout: String { L10n.tr("Localizable", "Do you really want to logout?") }
/// Don't miss out on important updates
internal static var donTMissOutOnImportantUpdates: String { L10n.tr("Localizable", "Don't miss out on important updates") }
/// Don’t Allow
internal static var donTAllow: String { L10n.tr("Localizable", "Don’t Allow") }
/// Don’t book my name
internal static var donTBookMyName: String { L10n.tr("Localizable", "Don’t book my name") }
/// Don’t go over the available funds
internal static var donTGoOverTheAvailableFunds: String { L10n.tr("Localizable", "Don’t go over the available funds") }
/// don’t have funds
internal static var donTHaveFunds: String { L10n.tr("Localizable", "don’t have funds") }
/// Earn a yield
internal static var earnAYield: String { L10n.tr("Localizable", "Earn a yield") }
/// Earn balance
internal static var earnBalance: String { L10n.tr("Localizable", "Earn balance") }
/// Earn interest on your crypto
internal static var earnInterestOnYourCrypto: String { L10n.tr("Localizable", "Earn interest on your crypto") }
/// Earn on your funds
internal static var earnOnYourFunds: String { L10n.tr("Localizable", "Earn on your funds") }
/// Earn up to %@ on %@
internal static func earnUpToOn(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "Earn up to %@ on %@", String(describing: p1), String(describing: p2))
}
/// Easy way to invest
internal static var easyWayToInvest: String { L10n.tr("Localizable", "Easy way to invest") }
/// Enable FaceID
internal static var enableFaceID: String { L10n.tr("Localizable", "Enable FaceID") }
/// Enable now
internal static var enableNow: String { L10n.tr("Localizable", "Enable now") }
/// Enable TouchID
internal static var enableTouchID: String { L10n.tr("Localizable", "Enable TouchID") }
/// Enter a number less than %d%
internal static func enterANumberLessThanD(_ p1: Int) -> String {
  return L10n.tr("Localizable", "Enter a number less than %d%", p1)
}
/// Enter a seed phrase from your account
internal static var enterASeedPhraseFromYourAccount: String { L10n.tr("Localizable", "Enter a seed phrase from your account") }
/// Enter correct security key
internal static var enterCorrectSecurityKey: String { L10n.tr("Localizable", "Enter correct security key") }
/// Enter current PIN
internal static var enterCurrentPIN: String { L10n.tr("Localizable", "Enter current PIN") }
/// Enter input amount
internal static var enterInputAmount: String { L10n.tr("Localizable", "Enter input amount") }
/// Enter security keys
internal static var enterSecurityKeys: String { L10n.tr("Localizable", "Enter security keys") }
/// Enter seed phrases in a correct order to recover your wallet
internal static var enterSeedPhrasesInACorrectOrderToRecoverYourWallet: String { L10n.tr("Localizable", "Enter seed phrases in a correct order to recover your wallet") }
/// Enter the amount to proceed
internal static var enterTheAmountToProceed: String { L10n.tr("Localizable", "Enter the amount to proceed") }
/// Enter the correct amount to continue
internal static var enterTheCorrectAmountToContinue: String { L10n.tr("Localizable", "Enter the correct amount to continue") }
/// Enter the recipient's address
internal static var enterTheRecipientSAddress: String { L10n.tr("Localizable", "Enter the recipient's address") }
/// Enter username
internal static var enterUsername: String { L10n.tr("Localizable", "Enter username") }
/// Enter username or skip
internal static var enterUsernameOrSkip: String { L10n.tr("Localizable", "Enter username or skip") }
/// Enter your security key
internal static var enterYourSecurityKey: String { L10n.tr("Localizable", "Enter your security key") }
/// Enter your seed phrase
internal static var enterYourSeedPhrase: String { L10n.tr("Localizable", "Enter your seed phrase") }
/// Error fetching market %@
internal static func errorFetchingMarket(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Error fetching market %@", String(describing: p1))
}
/// Error retrieving receipt
internal static var errorRetrievingReceipt: String { L10n.tr("Localizable", "Error retrieving receipt") }
/// Error sending transaction
internal static var errorSendingTransaction: String { L10n.tr("Localizable", "Error sending transaction") }
/// Error: %@
internal static func error(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Error: %@", String(describing: p1))
}
/// Estimating...
internal static var estimating: String { L10n.tr("Localizable", "Estimating...") }
/// Euro
internal static var euro: String { L10n.tr("Localizable", "Euro") }
/// Everything is broken
internal static var everythingIsBroken: String { L10n.tr("Localizable", "Everything is broken") }
/// Exceeded maximum number of instructions allowed
internal static var exceededMaximumNumberOfInstructionsAllowed: String { L10n.tr("Localizable", "Exceeded maximum number of instructions allowed") }
/// Exchange
internal static var exchange: String { L10n.tr("Localizable", "Exchange") }
/// Exchange rate
internal static var exchangeRate: String { L10n.tr("Localizable", "Exchange rate") }
/// Exchange rate is not valid
internal static var exchangeRateIsNotValid: String { L10n.tr("Localizable", "Exchange rate is not valid") }
/// Excluding fees you will deposit
internal static var excludingFeesYouWillDeposit: String { L10n.tr("Localizable", "Excluding fees you will deposit") }
/// Excluding fees, you'll deposit
internal static var excludingFeesYouLlDeposit: String { L10n.tr("Localizable", "Excluding fees, you'll deposit") }
/// expected
internal static var expected: String { L10n.tr("Localizable", "expected") }
/// Explore DeFi
internal static var exploreDeFi: String { L10n.tr("Localizable", "Explore DeFi") }
/// Fee calculator not found
internal static var feeCalculatorNotFound: String { L10n.tr("Localizable", "Fee calculator not found") }
/// Fee compensation pool not found
internal static var feeCompensationPoolNotFound: String { L10n.tr("Localizable", "Fee compensation pool not found") }
/// Feedback
internal static var feedback: String { L10n.tr("Localizable", "Feedback") }
/// Fetching receipt
internal static var fetchingReceipt: String { L10n.tr("Localizable", "Fetching receipt") }
/// Fill 12 or 24 words
internal static var fill12Or24Words: String { L10n.tr("Localizable", "Fill 12 or 24 words") }
/// Finding swapping routes
internal static var findingSwappingRoutes: String { L10n.tr("Localizable", "Finding swapping routes") }
/// Finish setup
internal static var finishSetup: String { L10n.tr("Localizable", "Finish setup") }
/// For security, change your authorization device to restore access For security, change your authorization device to restore access if needed.
internal static var forSecurityChangeYourAuthorizationDeviceToRestoreAccessForSecurityChangeYourAuthorizationDeviceToRestoreAccessIfNeeded: String { L10n.tr("Localizable", "For security, change your authorization device to restore access For security, change your authorization device to restore access if needed.") }
/// for the last 24 hours
internal static var forTheLast24Hours: String { L10n.tr("Localizable", "for the last 24 hours") }
/// found
internal static var found: String { L10n.tr("Localizable", "found") }
/// Found associated wallet address
internal static var foundAssociatedWalletAddress: String { L10n.tr("Localizable", "Found associated wallet address") }
/// Free by Key App
internal static var freeByKeyApp: String { L10n.tr("Localizable", "Free by Key App") }
/// French Franc
internal static var frenchFranc: String { L10n.tr("Localizable", "French Franc") }
/// Friends
internal static var friends: String { L10n.tr("Localizable", "Friends") }
/// From %@
internal static func fromToken(_ p1: Any) -> String {
  return L10n.tr("Localizable", "From token %@", String(describing: p1))
}
/// frontrun
internal static var frontrun: String { L10n.tr("Localizable", "frontrun") }
/// Get up to 8%% APY on staking USDC
internal static var getUpTo8APYOnStakingUSDC: String { L10n.tr("Localizable", "Get up to 8%% APY on staking USDC") }
/// Get your your own short crypto address
internal static var getYourYourOwnShortCryptoAddress: String { L10n.tr("Localizable", "Get your your own short crypto address") }
/// Getting creation fee
internal static var gettingCreationFee: String { L10n.tr("Localizable", "Getting creation fee") }
/// Given pool token amount results in zero trading tokens
internal static var givenPoolTokenAmountResultsInZeroTradingTokens: String { L10n.tr("Localizable", "Given pool token amount results in zero trading tokens") }
/// Go back to profile
internal static var goBackToProfile: String { L10n.tr("Localizable", "Go back to profile") }
/// Go back to wallet
internal static var goBackToWallet: String { L10n.tr("Localizable", "Go back to wallet") }
/// Go to wallet
internal static var goToWallet: String { L10n.tr("Localizable", "Go to wallet") }
/// Great!
internal static var great: String { L10n.tr("Localizable", "Great!") }
/// Grow your portfolio by receiving rewards up to %@%%
internal static func growYourPortfolioByReceivingRewardsUpTo(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Grow your portfolio by receiving rewards up to %@%", String(describing: p1))
}
/// Hidden
internal static var hidden: String { L10n.tr("Localizable", "Hidden") }
/// Hidden wallets
internal static var hiddenWallets: String { L10n.tr("Localizable", "Hidden wallets") }
/// Hide address detail
internal static var hideAddressDetail: String { L10n.tr("Localizable", "Hide address detail") }
/// Hide details
internal static var hideDetails: String { L10n.tr("Localizable", "Hide details") }
/// Hide direct and mint addresses
internal static var hideDirectAndMintAddresses: String { L10n.tr("Localizable", "Hide direct and mint addresses") }
/// Hide fees
internal static var hideFees: String { L10n.tr("Localizable", "Hide fees") }
/// Hide transaction details
internal static var hideTransactionDetails: String { L10n.tr("Localizable", "Hide transaction details") }
/// higher volatility
internal static var higherVolatility: String { L10n.tr("Localizable", "higher volatility") }
/// Home
internal static var home: String { L10n.tr("Localizable", "Home") }
/// I can complete this transaction within time
internal static var iCanCompleteThisTransactionWithinTime: String { L10n.tr("Localizable", "I can complete this transaction within time") }
/// I have saved these words in a safe place
internal static var iHaveSavedTheseWordsInASafePlace: String { L10n.tr("Localizable", "I have saved these words in a safe place") }
/// I understand
internal static var iUnderstand: String { L10n.tr("Localizable", "I understand") }
/// I want to receive
internal static var iWantToReceive: String { L10n.tr("Localizable", "I want to receive") }
/// I want to receive renBTC
internal static var iWantToReceiveRenBTC: String { L10n.tr("Localizable", "I want to receive renBTC") }
/// I'm sure, It's correct
internal static var imSureItSCorrect: String { L10n.tr("Localizable", "I'm sure, It's correct") }
///  · If lost, no one can restore it\n · Keep it private, even from us
internal static var ifLostNoOneCanRestoreItKeepItPrivateEvenFromUs: String { L10n.tr("Localizable", "If lost, no one can restore it Keep it private, even from us") }
/// If the network is changed to %@, the address field must be filled in with a %@.
internal static func ifTheNetworkIsChangedToTheAddressFieldMustBeFilledInWithA(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "If the network is changed to %@, the address field must be filled in with a %@.", String(describing: p1), String(describing: p2))
}
/// If the token is changed to %@, the address field must be filled in with a %@.
internal static func ifTheTokenIsChangedToTheAddressFieldMustBeFilledInWithA(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "If the token is changed to %@, the address field must be filled in with a %@.", String(describing: p1), String(describing: p2))
}
/// If there is a token named “%@“, we don't recommend sending it to your Solana address since it will most likely be lost forever.
internal static func ifThereIsATokenNamedWeDonTRecommendSendingItToYourSolanaAddressSinceItWillMostLikelyBeLostForever(_ p1: Any) -> String {
  return L10n.tr("Localizable", "If there is a token named “%@“, we don't recommend sending it to your Solana address since it will most likely be lost forever.", String(describing: p1))
}
/// If you cannot complete this transaction within the required time, please return at a later date.
internal static var ifYouCannotCompleteThisTransactionWithinTheRequiredTimePleaseReturnAtALaterDate: String { L10n.tr("Localizable", "If you cannot complete this transaction within the required time, please return at a later date.") }
/// If you create a new wallet account, you will receive your security key that you must write down somewhere safe. This is the only way to recover your wallet.\n\nIf you still have access to your old wallet, sometimes you can recover your security key from it.\n\nUsing Custodian wallet, you still have the option to regain access to your data by asking a third party.
internal static var ifYouCreateANewWalletAccount: String { L10n.tr("Localizable", "If you create a new wallet account") }
/// If you do not finish your transaction within this period/session/time frame, you risk losing the deposits.
internal static var ifYouDoNotFinishYourTransactionWithinThisPeriodSessionTimeFrameYouRiskLosingTheDeposits: String { L10n.tr("Localizable", "If you do not finish your transaction within this period/session/time frame, you risk losing the deposits.") }
/// If you have no backup, you may never be able to access this account.
internal static var ifYouHaveNoBackupYouMayNeverBeAbleToAccessThisAccount: String { L10n.tr("Localizable", "If you have no backup, you may never be able to access this account.") }
/// If you lose this device, you can recover your encrypted wallet backup from iCloud
internal static var ifYouLoseThisDeviceYouCanRecoverYourEncryptedWalletBackupFromICloud: String { L10n.tr("Localizable", "If you lose this device, you can recover your encrypted wallet backup from iCloud") }
/// If you lose this device, you can recover your encrypted wallet by using iCloud or mannually inputing your secret phrases
internal static var ifYouLoseThisDeviceYouCanRecoverYourEncryptedWalletByUsingICloudOrMannuallyInputingYourSecretPhrases: String { L10n.tr("Localizable", "If you lose this device, you can recover your encrypted wallet by using iCloud or mannually inputing your secret phrases") }
/// Import a wallet
internal static var importAWallet: String { L10n.tr("Localizable", "Import a wallet") }
/// Included fee %@
internal static func includedFee(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Included fee %@", String(describing: p1))
}
/// Incorrect %@ account
internal static func incorrectAccount(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Incorrect %@ account", String(describing: p1))
}
/// Incorrect %@ ID
internal static func incorrectID(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Incorrect %@ ID", String(describing: p1))
}
/// Incorrect account's owner
internal static var incorrectAccountSOwner: String { L10n.tr("Localizable", "Incorrect account's owner") }
/// Incorrect PIN, try again (%@ attempt left)
internal static func incorrectPINTryAgainAttemptLeft(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Incorrect PIN, try again (%@ attempt left)", String(describing: p1))
}
/// Incorrect PIN-code
internal static var incorrectPINCode: String { L10n.tr("Localizable", "Incorrect PIN-code") }
/// Increase maximum price slippage
internal static var increaseMaximumPriceSlippage: String { L10n.tr("Localizable", "Increase maximum price slippage") }
/// Info
internal static var info: String { L10n.tr("Localizable", "Info") }
/// Input amount is not valid
internal static var inputAmountIsNotValid: String { L10n.tr("Localizable", "Input amount is not valid") }
/// Input amount is too small, minimum amount for swapping is %@
internal static func inputAmountIsTooSmallMinimumAmountForSwappingIs(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Input amount is too small, minimum amount for swapping is %@", String(describing: p1))
}
/// Insufficient funds for fee
internal static var insufficientFundsForFee: String { L10n.tr("Localizable", "Insufficient funds for fee") }
/// Integrity of the route has been compromised
internal static var integrityOfTheRouteHasBeenCompromised: String { L10n.tr("Localizable", "Integrity of the route has been compromised") }
/// Invalid account info
internal static var invalidAccountInfo: String { L10n.tr("Localizable", "Invalid account info") }
/// Invalid estimated amount
internal static var invalidEstimatedAmount: String { L10n.tr("Localizable", "Invalid estimated amount") }
/// Invalid params
internal static var invalidParams: String { L10n.tr("Localizable", "Invalid params") }
/// Invalid status code
internal static var invalidStatusCode: String { L10n.tr("Localizable", "Invalid status code") }
/// Invisible
internal static var invisible: String { L10n.tr("Localizable", "Invisible") }
/// is only open for 36 hours
internal static var isOnlyOpenFor36Hours: String { L10n.tr("Localizable", "is only open for 36 hours") }
/// It must be an %@ wallet address
internal static func itMustBeAnWalletAddress(_ p1: Any) -> String {
  return L10n.tr("Localizable", "It must be an %@ wallet address ", String(describing: p1))
}
/// It’s a **one-time address**, so if you send multiple transactions, your money will be lost.
internal static var itSAOneTimeAddressSoIfYouSendMultipleTransactionsYourMoneyWillBeLost: String { L10n.tr("Localizable", "It’s a **one-time address**, so if you send multiple transactions, your money will be lost.") }
/// just now
internal static var justNow: String { L10n.tr("Localizable", "just now") }
/// Keep control of your assets with instant withdrawals at any time.
internal static var keepControlOfYourAssetsWithInstantWithdrawalsAtAnyTime: String { L10n.tr("Localizable", "Keep control of your assets with instant withdrawals at any time.") }
/// Language
internal static var language: String { L10n.tr("Localizable", "Language") }
/// Learn more
internal static var learnMore: String { L10n.tr("Localizable", "Learn more") }
/// Leave
internal static var leave: String { L10n.tr("Localizable", "Leave") }
/// Leave feedback
internal static var leaveFeedback: String { L10n.tr("Localizable", "Leave feedback") }
/// Leave this page?
internal static var leaveThisPage: String { L10n.tr("Localizable", "Leave this page?") }
/// Let your crypto work for you
internal static var letYourCryptoWorkForYou: String { L10n.tr("Localizable", "Let your crypto work for you") }
/// Let’s stay in touch
internal static var letSStayInTouch: String { L10n.tr("Localizable", "Let’s stay in touch") }
/// Light
internal static var light: String { L10n.tr("Localizable", "Light") }
/// Liquidity provider fee
internal static var liquidityProviderFee: String { L10n.tr("Localizable", "Liquidity provider fee") }
/// List of supported tokens
internal static var listOfSupportedTokens: String { L10n.tr("Localizable", "List of supported tokens") }
/// Loading exchange rate
internal static var loadingExchangeRate: String { L10n.tr("Localizable", "Loading exchange rate") }
/// Looks like you already have a wallet, but you still can create another one
internal static var looksLikeYouAlreadyHaveAWalletButYouStillCanCreateAnotherOne: String { L10n.tr("Localizable", "Looks like you already have a wallet, but you still can create another one") }
/// Low slippage caused the swap to fail
internal static var lowSlippageCausedTheSwapToFail: String { L10n.tr("Localizable", "Low slippage caused the swap to fail") }
/// Make another swap
internal static var makeAnotherSwap: String { L10n.tr("Localizable", "Make another swap") }
/// Make another transaction
internal static var makeAnotherTransaction: String { L10n.tr("Localizable", "Make another transaction") }
/// Make sure you understand the aspects
internal static var makeSureYouUnderstandTheAspects: String { L10n.tr("Localizable", "Make sure you understand the aspects") }
/// Make your crypto working on you
internal static var makeYourCryptoWorkingOnYou: String { L10n.tr("Localizable", "Make your crypto working on you") }
/// MAX amount is
internal static var maxAmountIs: String { L10n.tr("Localizable", "MAX amount is") }
/// Max price slippage
internal static var maxPriceSlippage: String { L10n.tr("Localizable", "Max price slippage") }
/// Maximum 15 latin characters and hyphens
internal static var maximum15LatinCharactersAndHyphens: String { L10n.tr("Localizable", "Maximum 15 latin characters and hyphens") }
/// Method not found
internal static var methodNotFound: String { L10n.tr("Localizable", "Method not found") }
/// minimum
internal static var minimum: String { L10n.tr("Localizable", "minimum") }
/// Minimum purchase of %@ required.
internal static func minimumPurchaseOfRequired(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Minimum purchase of %@ required.", String(describing: p1))
}
/// Minimum receive
internal static var minimumReceive: String { L10n.tr("Localizable", "Minimum receive") }
/// Minimum transaction amount of **%@**.
internal static func minimumTransactionAmountOf(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Minimum transaction amount of %@", String(describing: p1))
}
/// Mint address
internal static var mintAddress: String { L10n.tr("Localizable", "Mint address") }
/// Minting
internal static var minting: String { L10n.tr("Localizable", "Minting") }
/// minutes
internal static var minutes: String { L10n.tr("Localizable", "minutes") }
/// month
internal static var month: String { L10n.tr("Localizable", "month") }
/// Multiple wallets found
internal static var multipleWalletsFound: String { L10n.tr("Localizable", "Multiple wallets found") }
/// My balances
internal static var myBalances: String { L10n.tr("Localizable", "My balances") }
/// name
internal static var name: String { L10n.tr("Localizable", "name") }
/// Name copied to clipboard
internal static var nameCopiedToClipboard: String { L10n.tr("Localizable", "Name copied to clipboard") }
/// Native Solana Token
internal static var nativeSolanaToken: String { L10n.tr("Localizable", "Native Solana Token") }
/// Needs at least %@
internal static func needsAtLeast(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Needs at least %@", String(describing: p1))
}
/// New PIN-code
internal static var newPINCode: String { L10n.tr("Localizable", "New PIN-code") }
/// New staking option available
internal static var newStakingOptionAvailable: String { L10n.tr("Localizable", "New staking option available") }
/// New wallet
internal static var newWallet: String { L10n.tr("Localizable", "New wallet") }
/// next
internal static var next: String { L10n.tr("Localizable", "next") }
/// No account
internal static var noAccount: String { L10n.tr("Localizable", "No account") }
/// No chart data available.
internal static var noChartDataAvailable: String { L10n.tr("Localizable", "No chart data available.") }
/// No hidden costs
internal static var noHiddenCosts: String { L10n.tr("Localizable", "No hidden costs") }
/// No more than 15 alphanumerical latin lowercase characters and dashes
internal static var noMoreThan15AlphanumericalLatinLowercaseCharactersAndDashes: String { L10n.tr("Localizable", "No more than 15 alphanumerical latin lowercase characters and dashes") }
/// No routes for swapping current token pair
internal static var noRoutesForSwappingCurrentTokenPair: String { L10n.tr("Localizable", "No routes for swapping current token pair") }
/// no signer found
internal static var noSignerFound: String { L10n.tr("Localizable", "no signer found") }
/// No transactions yet
internal static var noTransactionsYet: String { L10n.tr("Localizable", "No transactions yet") }
/// Non-native account can only be closed if its balance is zero
internal static var nonNativeAccountCanOnlyBeClosedIfItsBalanceIsZero: String { L10n.tr("Localizable", "Non-native account can only be closed if its balance is zero") }
/// None
internal static var `none`: String { L10n.tr("Localizable", "None") }
/// Not enough %@ to pay network fee
internal static func notEnoughToPayNetworkFee(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Not enough %@ to pay network fee", String(describing: p1))
}
/// Not enough balance
internal static var notEnoughBalance: String { L10n.tr("Localizable", "Not enough balance") }
/// Not enough funds
internal static var notEnoughFunds: String { L10n.tr("Localizable", "Not enough funds") }
/// Not enough output amount
internal static var notEnoughOutputAmount: String { L10n.tr("Localizable", "Not enough output amount") }
/// Not enough token balance
internal static var notEnoughTokenBalance: String { L10n.tr("Localizable", "Not enough token balance") }
/// Not enought %@
internal static func notEnought(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Not enought %@", String(describing: p1))
}
/// Not yet reserved
internal static var notYetReserved: String { L10n.tr("Localizable", "Not yet reserved") }
/// Nothing found
internal static var nothingFound: String { L10n.tr("Localizable", "Nothing found") }
/// Notifications
internal static var notifications: String { L10n.tr("Localizable", "Notifications") }
/// One unified address to receive SOL or SPL Tokens
internal static var oneUnifiedAddressToReceiveSOLOrSPLTokens: String { L10n.tr("Localizable", "One unified address to receive SOL or SPL Tokens") }
/// only Bitcoin
internal static var onlyBitcoin: String { L10n.tr("Localizable", "only Bitcoin") }
/// Open your link again
internal static var openYourLinkAgain: String { L10n.tr("Localizable", "Open your link again") }
/// or reset it with a seed phrase
internal static var orResetItWithASeedPhrase: String { L10n.tr("Localizable", "or reset it with a seed phrase") }
/// Or saving into Keychain
internal static var orSavingIntoKeychain: String { L10n.tr("Localizable", "Or saving into Keychain") }
/// or your SOL account's address
internal static var orYourSOLAccountSAddress: String { L10n.tr("Localizable", "or your SOL account's address") }
/// passcodes do not match
internal static var passcodesDoNotMatch: String { L10n.tr("Localizable", "passcodes do not match") }
/// Pay %@ & Continue
internal static func payAndContinue(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Pay %@ and Continue", String(describing: p1))
}
/// Pay fees with
internal static var payFeesWith: String { L10n.tr("Localizable", "Pay fees with") }
/// Pay network fee with
internal static var payNetworkFeeWith: String { L10n.tr("Localizable", "Pay network fee with") }
/// Pay swap fees with
internal static var paySwapFeesWith: String { L10n.tr("Localizable", "Pay swap fees with") }
/// Payments
internal static var payments: String { L10n.tr("Localizable", "Payments") }
/// per
internal static var per: String { L10n.tr("Localizable", "per") }
/// PIN is set
internal static var pinIsSet: String { L10n.tr("Localizable", "PIN is set") }
/// PIN-code changed!
internal static var pinCodeChanged: String { L10n.tr("Localizable", "PIN-code changed!") }
/// PIN-code must have 6 digits
internal static var pinCodeMustHave6Digits: String { L10n.tr("Localizable", "PIN-code must have 6 digits") }
/// PIN-codes do not match
internal static var pinCodesDoNotMatch: String { L10n.tr("Localizable", "PIN-codes do not match") }
/// Please choose another token and try again!
internal static var pleaseChooseAnotherTokenAndTryAgain: String { L10n.tr("Localizable", "Please choose another token and try again!") }
/// Please choose paying with SOL
internal static var pleaseChoosePayingWithSOL: String { L10n.tr("Localizable", "Please choose paying with SOL") }
/// Please re-enter PIN-code
internal static var pleaseReEnterPINCode: String { L10n.tr("Localizable", "Please re-enter PIN-code") }
/// please try again later!
internal static var pleaseTryAgainLater: String { L10n.tr("Localizable", "please try again later!") }
/// Popular coins
internal static var popularCoins: String { L10n.tr("Localizable", "Popular coins") }
/// Powered by Project Serum
internal static var poweredByProjectSerum: String { L10n.tr("Localizable", "Powered by Project Serum") }
/// Prices updated
internal static var pricesUpdated: String { L10n.tr("Localizable", "Prices updated") }
/// Private & secure
internal static var privateAndSecure: String { L10n.tr("Localizable", "Private and secure") }
/// Proceed & don’t show again
internal static var proceedDonTShowAgain: String { L10n.tr("Localizable", "Proceed & don’t show again") }
/// Proceed without a username?
internal static var proceedWithoutAUsername: String { L10n.tr("Localizable", "Proceed without a username?") }
/// PROFILE AND SECURITY
internal static var profileAndSecurity: String { L10n.tr("Localizable", "PROFILE AND SECURITY") }
/// PublicKey not found
internal static var publicKeyNotFound: String { L10n.tr("Localizable", "PublicKey not found") }
/// Reason
internal static var reason: String { L10n.tr("Localizable", "Reason") }
/// Receive %@
internal static func receive(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Receive %@", String(describing: p1))
}
/// Receive **any token** within the Solana network even if it is not included in your wallet list
internal static var receiveAnyTokenWithinTheSolanaNetworkEvenIfItIsNotIncludedInYourWalletList: String { L10n.tr("Localizable", "Receive any token within the Solana network even if it is not included in your wallet list") }
/// Receive at least
internal static var receiveAtLeast: String { L10n.tr("Localizable", "Receive at least") }
/// Receive at least: %@ %@
internal static func receiveAtLeast(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "Receive at least: %@ %@", String(describing: p1), String(describing: p2))
}
/// Receive token
internal static var receiveToken: String { L10n.tr("Localizable", "Receive token") }
/// Receive token using SOL wallet's address
internal static var receiveTokenUsingSOLWalletSAddress: String { L10n.tr("Localizable", "Receive token using SOL wallet's address") }
/// Receive tokens
internal static var receiveTokens: String { L10n.tr("Localizable", "Receive tokens") }
/// Received
internal static var received: String { L10n.tr("Localizable", "Received") }
/// Received %@
internal static func received(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Received %@", String(describing: p1))
}
/// Received %@ renBTC
internal static func receivedRenBTC(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Received %@ renBTC", String(describing: p1))
}
/// Receiving %@ renBTC
internal static func receivingRenBTC(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Receiving %@ renBTC", String(describing: p1))
}
/// Receiving %@ renBTC: Pending
internal static func receivingRenBTCPending(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Receiving %@ renBTC: Pending", String(describing: p1))
}
/// Receiving status
internal static var receivingStatus: String { L10n.tr("Localizable", "Receiving status") }
/// Receiving statuses
internal static var receivingStatuses: String { L10n.tr("Localizable", "Receiving statuses") }
/// Receiving via Bitcoin network
internal static var receivingViaBitcoinNetwork: String { L10n.tr("Localizable", "Receiving via Bitcoin network") }
/// Recipient
internal static var recipient: String { L10n.tr("Localizable", "Recipient") }
/// Recovery kit
internal static var recoveryKit: String { L10n.tr("Localizable", "Recovery kit") }
/// Refresh page
internal static var refreshPage: String { L10n.tr("Localizable", "Refresh page") }
/// Refresh the page or check back later
internal static var refreshThePageOrCheckBackLater: String { L10n.tr("Localizable", "Refresh the page or check back later") }
/// Reload
internal static var reload: String { L10n.tr("Localizable", "Reload") }
/// renBTC
internal static var renBTC: String { L10n.tr("Localizable", "renBTC") }
/// renBTC account is required
internal static var renBTCAccountIsRequired: String { L10n.tr("Localizable", "renBTC account is required") }
/// Renew
internal static var renew: String { L10n.tr("Localizable", "Renew") }
/// Repeat new PIN-code
internal static var repeatNewPINCode: String { L10n.tr("Localizable", "Repeat new PIN-code") }
/// Reserve username
internal static var reserveUsername: String { L10n.tr("Localizable", "Reserve username") }
/// Reserve your username
internal static var reserveYourUsername: String { L10n.tr("Localizable", "Reserve your username") }
/// Reset and try again
internal static var resetAndTryAgain: String { L10n.tr("Localizable", "Reset and try again") }
/// Reset it
internal static var resetIt: String { L10n.tr("Localizable", "Reset it") }
/// Reset PIN with a seed phrase
internal static var resetPINWithASeedPhrase: String { L10n.tr("Localizable", "Reset PIN with a seed phrase") }
/// Reset your PIN
internal static var resetYourPIN: String { L10n.tr("Localizable", "Reset your PIN") }
/// Resetting your PIN
internal static var resettingYourPIN: String { L10n.tr("Localizable", "Resetting your PIN") }
/// Restore manually
internal static var restoreManually: String { L10n.tr("Localizable", "Restore manually") }
/// Restore using iCloud
internal static var restoreUsingICloud: String { L10n.tr("Localizable", "Restore using iCloud") }
/// Restoring wallet
internal static var restoringWallet: String { L10n.tr("Localizable", "Restoring wallet") }
/// Result
internal static var result: String { L10n.tr("Localizable", "Result") }
/// Retry
internal static var retry: String { L10n.tr("Localizable", "Retry") }
/// Retry after
internal static var retryAfter: String { L10n.tr("Localizable", "Retry after") }
/// Review & confirm
internal static var reviewAndConfirm: String { L10n.tr("Localizable", "Review and confirm") }
/// Russian Ruble
internal static var russianRuble: String { L10n.tr("Localizable", "Russian Ruble") }
/// Save & Continue
internal static var saveContinue: String { L10n.tr("Localizable", "Save & Continue") }
/// Save to iCloud
internal static var saveToICloud: String { L10n.tr("Localizable", "Save to iCloud") }
/// save to Keychain
internal static var saveToKeychain: String { L10n.tr("Localizable", "save to Keychain") }
/// Saved to iCloud
internal static var savedToICloud: String { L10n.tr("Localizable", "Saved to iCloud") }
/// Saved to Keychain
internal static var savedToKeychain: String { L10n.tr("Localizable", "Saved to Keychain") }
/// Saving to iCloud
internal static var savingToICloud: String { L10n.tr("Localizable", "Saving to iCloud") }
/// Saving to Keychain
internal static var savingToKeychain: String { L10n.tr("Localizable", "Saving to Keychain") }
/// Savings
internal static var savings: String { L10n.tr("Localizable", "Savings") }
/// Scan or copy QR code
internal static var scanOrCopyQRCode: String { L10n.tr("Localizable", "Scan or copy QR code") }
/// Search token
internal static var searchToken: String { L10n.tr("Localizable", "Search token") }
/// seconds
internal static var seconds: String { L10n.tr("Localizable", "seconds") }
/// Secure non-custodial bank of future
internal static var secureNonCustodialBankOfFuture: String { L10n.tr("Localizable", "Secure non-custodial bank of future") }
/// Secure your wallet
internal static var secureYourWallet: String { L10n.tr("Localizable", "Secure your wallet") }
/// Security & Network
internal static var securityNetwork: String { L10n.tr("Localizable", "Security & Network") }
/// security key
internal static var securityKey: String { L10n.tr("Localizable", "security key") }
/// Seed phrase must have 12 or 24 words
internal static var seedPhraseMustHave12Or24Words: String { L10n.tr("Localizable", "Seed phrase must have 12 or 24 words") }
/// Seed phrase must have at least 12 words
internal static var seedPhraseMustHaveAtLeast12Words: String { L10n.tr("Localizable", "Seed phrase must have at least 12 words") }
/// SELECT
internal static var select: String { L10n.tr("Localizable", "SELECT") }
/// Select currency
internal static var selectCurrency: String { L10n.tr("Localizable", "Select currency") }
/// Select Derivable Path
internal static var selectDerivablePath: String { L10n.tr("Localizable", "Select Derivable Path") }
/// Select the first token
internal static var selectTheFirstToken: String { L10n.tr("Localizable", "Select the first token") }
/// Select the second token
internal static var selectTheSecondToken: String { L10n.tr("Localizable", "Select the second token") }
/// Select token
internal static var selectToken: String { L10n.tr("Localizable", "Select token") }
/// Select token to pay fees
internal static var selectTokenToPayFees: String { L10n.tr("Localizable", "Select token to pay fees") }
/// Select wallet
internal static var selectWallet: String { L10n.tr("Localizable", "Select wallet") }
/// Select word #%@
internal static func selectWord(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Select word #%@", String(describing: p1))
}
/// Sell %@
internal static func sell(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Sell %@", String(describing: p1))
}
/// Sell all
internal static var sellAll: String { L10n.tr("Localizable", "Sell all") }
/// Send %@ %@
internal static func send(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "Send %@ %@", String(describing: p1), String(describing: p2))
}
/// Send coins
internal static var sendCoins: String { L10n.tr("Localizable", "Send coins") }
/// Send crypto in the Bitcoin and Solana\nnetwork instantly and without fees
internal static var sendCryptoInTheBitcoinAndSolanaNetworkInstantlyAndWithoutFees: String { L10n.tr("Localizable", "Send crypto in the Bitcoin and Solana\nnetwork instantly and without fees") }
/// Send crypto via link
internal static var sendCryptoViaLink: String { L10n.tr("Localizable", "Send crypto via link") }
/// Send Now
internal static var sendNow: String { L10n.tr("Localizable", "Send Now") }
/// Send SOL or any SPL Tokens on one address
internal static var sendSOLOrAnySPLTokensOnOneAddress: String { L10n.tr("Localizable", "Send SOL or any SPL Tokens on one address") }
/// Send to your wallet
internal static var sendToYourWallet: String { L10n.tr("Localizable", "Send to your wallet") }
/// Send tokens
internal static var sendTokens: String { L10n.tr("Localizable", "Send tokens") }
/// Sender’s\naddress
internal static var senderSAddress: String { L10n.tr("Localizable", "Sender’s address") }
/// Sending token...
internal static var sendingToken: String { L10n.tr("Localizable", "Sending token...") }
/// Sending via link
internal static var sendingViaLink: String { L10n.tr("Localizable", "Sending via link") }
/// Sent
internal static var sent: String { L10n.tr("Localizable", "Sent") }
/// Serum order creation (paid once per pair)
internal static var serumOrderCreationPaidOncePerPair: String { L10n.tr("Localizable", "Serum order creation (paid once per pair)") }
/// Set up a new PIN
internal static var setUpANewPIN: String { L10n.tr("Localizable", "Set up a new PIN") }
/// Set up a new wallet PIN
internal static var setUpANewWalletPIN: String { L10n.tr("Localizable", "Set up a new wallet PIN") }
/// Set up a wallet PIN
internal static var setUpAWalletPIN: String { L10n.tr("Localizable", "Set up a wallet PIN") }
/// Share your Solana network address
internal static var shareYourSolanaNetworkAddress: String { L10n.tr("Localizable", "Share your Solana network address") }
/// Show address
internal static var showAddress: String { L10n.tr("Localizable", "Show address") }
/// Show address detail
internal static var showAddressDetail: String { L10n.tr("Localizable", "Show address detail") }
/// Show deposit
internal static var showDeposit: String { L10n.tr("Localizable", "Show deposit") }
/// Show deposit (%@)
internal static func showDeposit(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Show deposit (%@)", String(describing: p1))
}
/// Show deposits
internal static var showDeposits: String { L10n.tr("Localizable", "Show deposits") }
/// Show details
internal static var showDetails: String { L10n.tr("Localizable", "Show details") }
/// Show direct and mint addresses
internal static var showDirectAndMintAddresses: String { L10n.tr("Localizable", "Show direct and mint addresses") }
/// Show fees
internal static var showFees: String { L10n.tr("Localizable", "Show fees") }
/// Show my private key
internal static var showMyPrivateKey: String { L10n.tr("Localizable", "Show my private key") }
/// Show swap details
internal static var showSwapDetails: String { L10n.tr("Localizable", "Show swap details") }
/// Show transaction details
internal static var showTransactionDetails: String { L10n.tr("Localizable", "Show transaction details") }
/// Show wallet address
internal static var showWalletAddress: String { L10n.tr("Localizable", "Show wallet address") }
/// Show your security key
internal static var showYourSecurityKey: String { L10n.tr("Localizable", "Show your security key") }
/// Showing my address for
internal static var showingMyAddressFor: String { L10n.tr("Localizable", "Showing my address for") }
/// Signer error
internal static var signerError: String { L10n.tr("Localizable", "Signer error") }
/// Simple decentralized finance for everyone
internal static var simpleDecentralizedFinanceForEveryone: String { L10n.tr("Localizable", "Simple decentralized finance for everyone") }
/// Simple finance for everyone
internal static var simpleFinanceForEveryone: String { L10n.tr("Localizable", "Simple finance for everyone") }
/// Slide to deposit
internal static var slideToDeposit: String { L10n.tr("Localizable", "Slide to deposit") }
/// Slide to scan
internal static var slideToScan: String { L10n.tr("Localizable", "Slide to scan") }
/// Slide to withdraw
internal static var slideToWithdraw: String { L10n.tr("Localizable", "Slide to withdraw") }
/// Slippage can occur at any time, but it is most prevalent during periods of %@
internal static func slippageCanOccurAtAnyTimeButItIsMostPrevalentDuringPeriodsOf(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Slippage can occur at any time, but it is most prevalent during periods of %@", String(describing: p1))
}
/// Slippage error
internal static var slippageError: String { L10n.tr("Localizable", "Slippage error") }
/// Slippage exceeds maximum
internal static var slippageExceedsMaximum: String { L10n.tr("Localizable", "Slippage exceeds maximum") }
/// Slippage isn't valid
internal static var slippageIsnTValid: String { L10n.tr("Localizable", "Slippage isn't valid") }
/// Slippage settings
internal static var slippageSettings: String { L10n.tr("Localizable", "Slippage settings") }
/// Slippage tolerance %@
internal static func slippageTolerance(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Slippage tolerance %@", String(describing: p1))
}
/// SOL and SPL Tokens
internal static var solAndSPLTokens: String { L10n.tr("Localizable", "SOL and SPL Tokens") }
/// SOL Price
internal static var solPrice: String { L10n.tr("Localizable", "SOL Price") }
/// SOL purchase cost
internal static var solPurchaseCost: String { L10n.tr("Localizable", "SOL purchase cost") }
/// Solana
internal static var solana: String { L10n.tr("Localizable", "Solana") }
/// Solana program error
internal static var solanaProgramError: String { L10n.tr("Localizable", "Solana program error") }
/// Solana RPC client error
internal static var solanaRPCClientError: String { L10n.tr("Localizable", "Solana RPC client error") }
/// Solend is one of the most scalable, fastest and lowest fee DeFi lending protocol, that allows you to earn interest on your assets.
internal static var solendIsOneOfTheMostScalableFastestAndLowestFeeDeFiLendingProtocolThatAllowsYouToEarnInterestOnYourAssets: String { L10n.tr("Localizable", "Solend is one of the most scalable, fastest and lowest fee DeFi lending protocol, that allows you to earn interest on your assets.") }
/// Some parameters are missing
internal static var someParametersAreMissing: String { L10n.tr("Localizable", "Some parameters are missing") }
/// Something went wrong!\nPlease try again later
  internal static var somethingWentWrongPleaseTryAgainLater: String { L10n.tr("Localizable", "Something went wrong!\nPlease try again later") }
/// Sorry, we don't know such a country
  internal static var sorryWeDonTKnowSuchACountry: String { L10n.tr("Localizable", "Sorry, we don't know such a country") }
/// Source account is not valid
internal static var sourceAccountIsNotValid: String { L10n.tr("Localizable", "Source account is not valid") }
/// Spend
internal static var spend: String { L10n.tr("Localizable", "Spend") }
/// Spent
internal static var spent: String { L10n.tr("Localizable", "Spent") }
/// Status
internal static var status: String { L10n.tr("Localizable", "Status") }
/// Statuses received
internal static var statusesReceived: String { L10n.tr("Localizable", "Statuses received") }
/// Statuses received (%@)
internal static func statusesReceived(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Statuses received (%@)", String(describing: p1))
}
/// Submitted to RenVM
internal static var submittedToRenVM: String { L10n.tr("Localizable", "Submitted to RenVM") }
/// Submitting to RenVM
internal static var submittingToRenVM: String { L10n.tr("Localizable", "Submitting to RenVM") }
/// Success
internal static var success: String { L10n.tr("Localizable", "Success") }
/// Successfully changed PIN-code
internal static var successfullyChangedPINCode: String { L10n.tr("Localizable", "Successfully changed PIN-code") }
/// Successfully minted %@ renBTC!
internal static func successfullyMintedRenBTC(_ p1: Any) -> String {
  return L10n.tr("Localizable", "Successfully minted %@ renBTC!", String(describing: p1))
}
/// Suggest ways to improve Key App
internal static var suggestWaysToImproveKeyApp: String { L10n.tr("Localizable", "Suggest ways to improve Key App") }
/// Superhero protection
internal static var superheroProtection: String { L10n.tr("Localizable", "Superhero protection") }
/// Swap fees
internal static var swapFees: String { L10n.tr("Localizable", "Swap fees") }
/// Swap instruction exceeds desired slippage limit
internal static var swapInstructionExceedsDesiredSlippageLimit: String { L10n.tr("Localizable", "Swap instruction exceeds desired slippage limit") }
/// Swap now
internal static var swapNow: String { L10n.tr("Localizable", "Swap now") }
/// Swap settings
internal static var swapSettings: String { L10n.tr("Localizable", "Swap settings") }
/// Swap with crypto
internal static var swapWithCrypto: String { L10n.tr("Localizable", "Swap with crypto") }
/// Swapping from %@ to %@ is currently unsupported
internal static func swappingFromToIsCurrentlyUnsupported(_ p1: Any, _ p2: Any) -> String {
  return L10n.tr("Localizable", "Swapping from %@ to %@ is currently unsupported", String(describing: p1), String(describing: p2))
}
/// Swapping is currently unavailable
internal static var swappingIsCurrentlyUnavailable: String { L10n.tr("Localizable", "Swapping is currently unavailable") }
/// Swapping pools not found
internal static var swappingPoolsNotFound: String { L10n.tr("Localizable", "Swapping pools not found") }
/// Switch language?
internal static var switchLanguage: String { L10n.tr("Localizable", "Switch language?") }
/// Switching network...
internal static var switchingNetwork: String { L10n.tr("Localizable", "Switching network...") }
/// Switching to
internal static var switchingTo: String { L10n.tr("Localizable", "Switching to") }
/// System
internal static var system: String { L10n.tr("Localizable", "System") }
/// System error
internal static var systemError: String { L10n.tr("Localizable", "System error") }
/// Tap and hold to copy
internal static var tapAndHoldToCopy: String { L10n.tr("Localizable", "Tap and hold to copy") }
/// Tap button to retry!
internal static var tapButtonToRetry: String { L10n.tr("Localizable", "Tap button to retry!") }
/// Tap here to retry
internal static var tapHereToRetry: String { L10n.tr("Localizable", "Tap here to retry") }
/// tap refresh button to retry
internal static var tapRefreshButtonToRetry: String { L10n.tr("Localizable", "tap refresh button to retry") }
/// Tap to view in explorer
internal static var tapToViewInExplorer: String { L10n.tr("Localizable", "Tap to view in explorer") }
/// Terms and conditions
internal static var termsAndConditions: String { L10n.tr("Localizable", "Terms and conditions") }
/// Terms of Use
internal static var termsOfUse: String { L10n.tr("Localizable", "Terms of Use") }
/// Terms of Use and Privacy Policy
internal static var termsOfUseAndPrivacyPolicy: String { L10n.tr("Localizable", "Terms of Use and Privacy Policy") }
/// The address is not valid
internal static var theAddressIsNotValid: String { L10n.tr("Localizable", "The address is not valid") }
/// The definition
internal static var theDefinition: String { L10n.tr("Localizable", "The definition") }
/// The fee calculation failed due to overflow, underflow or unexpected 0
internal static var theFeeCalculationFailedDueToOverflowUnderflowOrUnexpected0: String { L10n.tr("Localizable", "The fee calculation failed due to overflow, underflow or unexpected 0") }



