name: Pull request review submitted
on:
  pull_request_review:
    types: [submitted]
jobs:
  # Return task back to In Progress if pull request is changes requested
  return_task_to_in_progress:
    name: Return task back to In Progress if pull request is changes requested
    if: github.event.review.state == 'changes_requested'
    runs-on: ubuntu-latest

    steps:
      - name: Login to JIRA
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Find JIRA issue from branchname
        id: find_issue
        if: ${{ github.event.pull_request.head.ref }}
        uses: atlassian/gajira-find-issue-key@master
        with:
          string: ${{ github.event.pull_request.head.ref }}
          from: ""

      - name: Move issue back to IN PROGRESS
        if: ${{ steps.find_issue.outputs.issue }}
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ steps.find_issue.outputs.issue }}
          transition: ${{ secrets.JIRA_IN_PROGRESS_TRANSITION_NAME }}

  # Upload build for testing when pull request is approved
  upload_build_for_testing:
    name: Upload build for testing when pull request is approved
    if: github.event.review.state == 'approved'
    runs-on: macos-latest

    steps:
      - name: Check out current branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          submodules: recursive
          token: ${{ secrets.SUBMODULES_ACCESS_TOKEN }}

      - name: Copy xcconfig file
        run: |
          curl -o ./p2p_wallet/Config.xcconfig ${{ secrets.XCCONFIG_URL }}
        shell: bash

      - name: Install Dependencies
        run: |
          pod install --repo-update
        shell: bash

      - name: Generate Strings+Asset
        run: |
          Pods/SwiftGen/bin/swiftgen
        shell: bash

      - name: "Upload to firebase for testing"
        uses: maierj/fastlane-action@v2.2.0
        with:
          lane: feature_test
        env:
          DEVELOPER_APP_IDENTIFIER: '${{ secrets.DEVELOPER_APP_IDENTIFIER }}'
          APP_STORE_CONNECT_TEAM_ID: '${{ secrets.APP_STORE_CONNECT_TEAM_ID }}'
          DEVELOPER_PORTAL_TEAM_ID: '${{ secrets.DEVELOPER_PORTAL_TEAM_ID }}'
          DEVELOPER_APP_ID: '${{ secrets.DEVELOPER_APP_ID }}'
          PROVISIONING_PROFILE_SPECIFIER_ADHOC: '${{ secrets.PROVISIONING_PROFILE_SPECIFIER_ADHOC }}'
          PROVISIONING_PROFILE_SPECIFIER_APPSTORE: '${{ secrets.PROVISIONING_PROFILE_SPECIFIER_APPSTORE }}'
          APPLE_ISSUER_ID: '${{ secrets.APPLE_ISSUER_ID }}'
          PROVISIONING_REPO: '${{ secrets.PROVISIONING_REPO }}'
          FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'
          FIREBASE_CLI_TOKEN: '${{ secrets.FIREBASE_CLI_TOKEN }}'
          BROWSERSTACK_USERNAME: '${{ secrets.BROWSERSTACK_USERNAME }}'
          BROWSERSTACK_ACCESS_KEY: '${{ secrets.BROWSERSTACK_ACCESS_KEY }}'
          FASTLANE_APPLE_ID: '${{ secrets.FASTLANE_APPLE_ID }}'
          TEMP_KEYCHAIN_USER: '${{ secrets.TEMP_KEYCHAIN_USER }}'
          TEMP_KEYCHAIN_PASSWORD: '${{ secrets.TEMP_KEYCHAIN_PASSWORD }}'
          APPLE_KEY_ID: '${{ secrets.APPLE_KEY_ID }}'
          APPLE_KEY_CONTENT: '${{ secrets.APPLE_KEY_CONTENT }}'
          GIT_AUTHORIZATION: '${{ secrets.GIT_AUTHORIZATION }}'
          MATCH_PASSWORD: '${{ secrets.MATCH_PASSWORD }}'
          IS_CI: '${{ secrets.IS_CI }}'

      - name: Login to JIRA
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Find JIRA issue from branchname
        id: find_issue
        if: ${{ env.BRANCH_NAME }}
        uses: atlassian/gajira-find-issue-key@master
        with:
          string: ${{ env.BRANCH_NAME }}
          from: ""

      - name: Comment on issue
        if: ${{ steps.find_issue.outputs.issue }}
        uses: atlassian/gajira-comment@master
        with:
          issue: ${{ steps.find_issue.outputs.issue }}
          comment: "A build ${{ env.BUILD_NUMBER }} added for testing this issue"

      - name: Move issue to READY FOR TESTING
        if: ${{ steps.find_issue.outputs.issue }}
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ steps.find_issue.outputs.issue }}
          transition: ${{ secrets.JIRA_READY_FOR_TESTING_TRANSITION_NAME }}
